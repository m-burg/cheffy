defmodule Cheffy.Repo.Migrations.AddComponentSubstitutes do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    drop constraint("recipe_components", "recipe_components_pkey")

    alter table(:recipe_components) do
      modify :ingredient_id, :uuid, primary_key: false
      modify :recipe_id, :uuid, primary_key: false
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    create table(:component_substitutes, primary_key: false) do
      add :recipe_component_id,
          references(:recipe_components,
            column: :id,
            name: "component_substitutes_recipe_component_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          primary_key: true,
          null: false

      add :ingredient_id,
          references(:ingredients,
            column: :id,
            name: "component_substitutes_ingredient_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          primary_key: true,
          null: false
    end

    create unique_index(:recipe_components, [:ingredient_id, :recipe_id],
             name: "recipe_components_unique_recipe_ingredient_combo_index"
           )
  end

  def down do
    drop constraint("recipe_components", "recipe_components_pkey")

    drop_if_exists unique_index(:recipe_components, [:ingredient_id, :recipe_id],
                     name: "recipe_components_unique_recipe_ingredient_combo_index"
                   )

    alter table(:recipe_components) do
      remove :id
      modify :recipe_id, :uuid, primary_key: true
      modify :ingredient_id, :uuid, primary_key: true
    end

    drop constraint(:component_substitutes, "component_substitutes_recipe_component_id_fkey")

    drop constraint(:component_substitutes, "component_substitutes_ingredient_id_fkey")

    drop table(:component_substitutes)
  end
end
